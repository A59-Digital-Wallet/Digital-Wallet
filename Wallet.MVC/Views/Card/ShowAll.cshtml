@using System.Globalization
@model IEnumerable<Wallet.DTO.Response.CardResponseDTO>

@{
    ViewData["Title"] = "All Cards";
}
<div class="container mt-4 mx-auto p-8 bg-gray-100 rounded-lg shadow-md">
    <h2 class="mb-8 text-center text-2xl font-bold text-gray-800">All Cards</h2>

    <!-- Success Message -->
    @if (TempData["SuccessMessage"] != null)
    {
        <div class="bg-green-100 border border-green-400 text-green-700 px-4 py-3 rounded relative mb-4" role="alert">
            <strong class="font-bold">Success: </strong>
            <span class="block sm:inline">@TempData["SuccessMessage"]</span>
        </div>
    }

    <!-- Error Message (General errors not associated with a specific field) -->
    @if (TempData["ErrorMessage"] != null)
    {
        <div class="bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded relative mb-4" role="alert">
            <strong class="font-bold">Error: </strong>
            <span class="block sm:inline">@TempData["ErrorMessage"]</span>
        </div>
    }

    <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8 justify-items-center">
        @foreach (var card in Model)
        {
            string cardNetworkLink = "";
            DateTime date = DateTime.Parse(card.ExpiryDate.ToString(), new CultureInfo("bg-BG"));
            string formattedDate = date.ToString("MM/yy", CultureInfo.InvariantCulture);
            switch (card.CardNetwork)
            {
                case Wallet.Data.Models.Enums.CardNetwork.Visa:
                    cardNetworkLink = Url.Content("~/images/visa.png");
                    break;
                case Wallet.Data.Models.Enums.CardNetwork.MasterCard:
                    cardNetworkLink = Url.Content("~/images/mastercard.png");
                    break;
                case Wallet.Data.Models.Enums.CardNetwork.Discover:
                    cardNetworkLink = Url.Content("~/images/discover.png");
                    break;
                case Wallet.Data.Models.Enums.CardNetwork.AmericanExpress:
                    cardNetworkLink = Url.Content("~/images/amex.png");
                    break;
                    // Add more cases as necessary
            }
            <div class="card-container mb-6">
                <!-- Card Layout -->
                <div class="relative h-[230px] w-[400px] flex flex-col justify-end px-6 py-10 text-white rounded-3xl gap-4 bg-gradient-to-r from-purple-500 to-pink-500">
                    <p class="text-2xl font-medium">@card.CardNumber</p>
                    <div class="flex justify-between items-end gap-4">
                        <p class="text-lg font-medium flex-1">@card.CardHolderName</p>
                        <div class="text-right">
                            <p class="text-xs">Valid Date</p>
                            <p class="text-lg font-semibold">@formattedDate</p>
                        </div>
                        <div class="w-12">
                            <img src="@cardNetworkLink" alt="Card Network Logo" class="w-full">
                        </div>
                    </div>
                </div>

                <!-- Button Group -->
                <div class="flex justify-center mt-4">
                    <form asp-action="RemoveCard" method="post">
                        @Html.AntiForgeryToken()
                        <input type="hidden" name="cardId" value="@card.Id" />
                        <button type="submit" class="bg-red-600 hover:bg-red-700 text-white font-bold py-2 px-4 rounded-full transition duration-300">
                            <i class="fas fa-minus mr-2"></i> Remove
                        </button>
                    </form>
                </div>
            </div>
        }
    </div>

    <!-- Add Card Button -->
    <div class="text-center mt-8">
        <a href="@Url.Action("AddCard", "Card")" class="inline-flex items-center bg-indigo-600 hover:bg-indigo-700 text-white font-bold py-2 px-6 rounded-full transition duration-300">
            <i class="fas fa-plus mr-2"></i> Add Card
        </a>
    </div>
</div>
