@model Wallet.DTO.Request.CardRequest

@{
    ViewData["Title"] = "Add Card";
}

<div class="bg-white p-8 rounded-lg shadow-lg max-w-md mx-auto mt-10 mb-10">
    <h2 class="text-center text-2xl font-bold mb-6">Add Card</h2>

    <!-- Success Message -->
    @if (TempData["SuccessMessage"] != null)
    {
        <div class="bg-green-100 border border-green-400 text-green-700 px-4 py-3 rounded relative mb-4" role="alert">
            <strong class="font-bold">Success: </strong>
            <span class="block sm:inline">@TempData["SuccessMessage"]</span>
        </div>
    }

    <!-- Error Message (General errors not associated with a specific field) -->
    @if (TempData["ErrorMessage"] != null)
    {
        <div class="bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded relative mb-4" role="alert">
            <strong class="font-bold">Error: </strong>
            <span class="block sm:inline">@TempData["ErrorMessage"]</span>
        </div>
    }

    <form asp-action="AddCard" method="post" class="space-y-4">
        @Html.AntiForgeryToken()

        <!-- Cardholder Name -->
        <div>
            <label for="CardHolderName" class="block text-sm font-medium text-gray-700">Cardholder Name</label>
            <input type="text" id="CardHolderName" name="CardHolderName" required
                   class="w-full p-3 border rounded-lg placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500 focus:shadow-md shadow-[#6172de] transition duration-300 ease-in-out transition-property[box-shadow,border-color] @((ViewData.ModelState["CardHolderName"]?.Errors.Count > 0 ? "border-red-500" : "border-gray-300"))"
                   placeholder="John Smith">
            <span asp-validation-for="CardHolderName" class="text-red-500 text-sm"></span>
        </div>

        <!-- Card Number -->
        <div>
            <label for="CardNumber" class="block text-sm font-medium text-gray-700">Card Number</label>
            <input type="text" id="CardNumber" name="CardNumber" required
                   class="w-full p-3 border rounded-lg placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500 focus:shadow-md shadow-[#6172de] transition duration-300 ease-in-out transition-property[box-shadow,border-color] @((ViewData.ModelState["CardNumber"]?.Errors.Count > 0 ? "border-red-500" : "border-gray-300"))"
                   placeholder="4256 7890 5678 4532">
            <span asp-validation-for="CardNumber" class="text-red-500 text-sm"></span>
        </div>

        <!-- Expiry Date -->
        <div>
            <label for="ExpiryDate" class="block text-sm font-medium text-gray-700">Expiry Date</label>
            <input type="text" id="ExpiryDate" name="ExpiryDate" required pattern="\d{2}/\d{2}" title="Format: MM/YY"
                   class="w-full p-3 border rounded-lg placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500 focus:shadow-md shadow-[#6172de] transition duration-300 ease-in-out transition-property[box-shadow,border-color] @((ViewData.ModelState["ExpiryDate"]?.Errors.Count > 0 ? "border-red-500" : "border-gray-300"))"
                   placeholder="MM/YY">
            <span asp-validation-for="ExpiryDate" class="text-red-500 text-sm"></span>
        </div>

        <!-- CVV -->
        <div>
            <label for="CVV" class="block text-sm font-medium text-gray-700">CVV</label>
            <input type="text" id="CVV" name="CVV" required
                   class="w-full p-3 border rounded-lg placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500 focus:shadow-md shadow-[#6172de] transition duration-300 ease-in-out transition-property[box-shadow,border-color] @((ViewData.ModelState["CVV"]?.Errors.Count > 0 ? "border-red-500" : "border-gray-300"))"
                   placeholder="145">
            <span asp-validation-for="CVV" class="text-red-500 text-sm"></span>
        </div>

        <!-- Submit Button -->
        <div class="text-center mt-4">
            <button type="submit" class="bg-indigo-600 text-white py-2 px-6 rounded-full hover:bg-indigo-700 transition duration-300">Submit</button>
        </div>
    </form>
</div>

<script>
    document.addEventListener("DOMContentLoaded", function () {
        const expirationDateInput = document.querySelector('input[name="ExpiryDate"]');

        expirationDateInput.addEventListener("input", function () {
            this.value = this.value.replace(/[^0-9\/]/g, '').replace(/(\..*)\./g, '$1'); // Only allow numbers and "/"
            if (this.value.length === 2 && !this.value.includes("/")) {
                this.value = this.value + "/";
            }
        });

        // Reset the border color when typing in input fields
        document.querySelectorAll('input').forEach(function (input) {
            input.addEventListener('input', function () {
                this.classList.remove('border-red-500');
                this.classList.add('border-gray-300');
            });
        });
    });
</script>
