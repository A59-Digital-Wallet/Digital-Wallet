@model Wallet.MVC.Models.TransferViewModel

@{
    ViewData["Title"] = "Initiate Transfer";
}

<div class="container mt-4">
    <div class="transfer-card shadow-md rounded-lg p-4">
        <h2 class="text-3xl font-bold text-gray-800 mb-5">Initiate Transfer</h2>

        <!-- Form to handle user search and transfer -->
        <form method="post" asp-action="InitiateTransfer">
            <!-- Select Wallet to Transfer From -->
            <div class="form-group mb-3">
                <label for="FromWalletId" class="font-semibold text-gray-700">From Wallet</label>
                <select id="FromWalletId" name="FromWalletId" class="form-control p-2 rounded-lg border-gray-300">
                    <option value="" disabled selected>Select your wallet</option>
                    @foreach (var wallet in Model.Wallets)
                    {
                        <option value="@wallet.Value" selected="@(Model.FromWalletId == int.Parse(wallet.Value) ? " selected" : "" )">@wallet.Text</option>
                    }
                </select>
            </div>

            <!-- Search for Recipient -->
            <div class="form-group mb-3">
                <label for="RecipientUsername" class="font-semibold text-gray-700">Recipient Username</label>
                <input type="text" id="RecipientUsername" name="RecipientUsername" value="@Model.RecipientUsername" class="form-control p-2 rounded-lg border-gray-300" />
                <button type="submit" class="btn btn-primary mt-2">Search</button>
                @if (!string.IsNullOrEmpty(ViewData["RecipientSearchMessage"] as string))
                {
                    <div class="alert alert-danger mt-2">@ViewData["RecipientSearchMessage"]</div>
                }
            </div>

            <!-- Recipient Wallets (Only shown if user found) -->
            @if (Model.RecipientWallets != null && Model.RecipientWallets.Any())
            {
                <div class="form-group mb-3">
                    <label for="ToWalletId" class="font-semibold text-gray-700">Select Recipient Wallet</label>
                    <select id="ToWalletId" name="ToWalletId" class="form-control p-2 rounded-lg border-gray-300">
                        <option value="" disabled selected>Select recipient's wallet</option>
                        @foreach (var wallet in Model.RecipientWallets)
                        {
                            <option value="@wallet.Value" selected="@(Model.ToWalletId == int.Parse(wallet.Value) ? "selected" : "")">@wallet.Text</option>
                        }
                    </select>
                </div>
            }

            <!-- Transfer Amount -->
            <div class="form-group mb-3">
                <label for="Amount" class="font-semibold text-gray-700">Amount</label>
                <input type="number" id="Amount" name="Amount" value="@Model.Amount" class="form-control p-2 rounded-lg border-gray-300" step="0.01" />
            </div>

            <!-- Recurring Transfer Option -->
            <div class="form-group mb-3">
                <label asp-for="IsRecurring" class="font-semibold text-gray-700">Make Recurring</label>
                <input asp-for="IsRecurring" type="checkbox" id="IsRecurring" class="form-check-input" />
            </div>

            <!-- Recurrence Interval Selection (only shown if recurring) -->
            <div class="form-group mb-3" id="recurrenceIntervalGroup" style="display: none;">
                <label asp-for="RecurrenceInterval" class="font-semibold text-gray-700">Recurrence Interval</label>
                <select asp-for="RecurrenceInterval" class="form-control">
                    <option value="Daily">Daily</option>
                    <option value="Weekly">Weekly</option>
                    <option value="Monthly">Monthly</option>
                </select>
                <span asp-validation-for="RecurrenceInterval" class="text-danger"></span>
            </div>

            <button type="submit" formaction="@Url.Action("ProcessTransfer", "Transaction")" class="btn btn-primary p-2 mt-4 rounded-lg bg-blue-500 text-white hover:bg-blue-600">Transfer</button>
        </form>
    </div>
</div>

<style>
    .transfer-card {
        background-color: #ffffff;
        border-radius: 20px;
        padding: 20px;
        box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
        max-width: 600px;
        margin: 0 auto;
    }

    .form-control {
        width: 100%;
        padding: 10px;
        border: 1px solid #ddd;
        border-radius: 5px;
        font-size: 16px;
        color: #333;
    }

    .btn-primary {
        background-color: #6c63ff;
        border-color: #6c63ff;
        color: #fff;
    }

        .btn-primary:hover {
            background-color: #5753d3;
        }
</style>

<script>
    document.getElementById('IsRecurring').addEventListener('change', function () {
        var intervalGroup = document.getElementById('recurrenceIntervalGroup');
        if (this.checked) {
            intervalGroup.style.display = 'block';
        } else {
            intervalGroup.style.display = 'none';
        }
    });
</script>
