@model Wallet.DTO.Request.UserWalletRequest
@using Wallet.Data.Models.Enums

<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Create Wallet</title>
    <link href="https://cdn.jsdelivr.net/npm/tailwindcss@2.2.19/dist/tailwind.min.css" rel="stylesheet">
</head>

<body class="bg-gray-100 font-sans">
    <div class="container mx-auto mt-12">
        <div class="bg-white max-w-lg mx-auto p-8 rounded-xl shadow-lg">
            <h2 class="text-3xl font-semibold text-center mb-6">Create a New Wallet</h2>
            <form asp-action="Create" method="post" class="space-y-6">
                <!-- Wallet Name -->
                <div>
                    <label asp-for="Name" class="block text-sm font-medium text-gray-700 mb-1">Wallet Name</label>
                    <input asp-for="Name" class="w-full p-3 border rounded-lg focus:ring-indigo-500 focus:border-indigo-500 @((ViewData.ModelState["Name"]?.Errors.Count > 0 ? "border-red-500" : "border-gray-300"))" />
                    <span asp-validation-for="Name" class="text-red-500 text-sm mt-2 block"></span>
                </div>

                <!-- Currency Selection -->
                <div>
                    <label asp-for="Currency" class="block text-sm font-medium text-gray-700 mb-1">Currency</label>
                    <select asp-for="Currency" class="w-full p-3 border rounded-lg focus:ring-indigo-500 focus:border-indigo-500 @((ViewData.ModelState["Currency"]?.Errors.Count > 0 ? "border-red-500" : "border-gray-300"))">
                        <option value="None">Select Currency</option>
                        <option value="BGN">BGN (Bulgarian Lev)</option>
                        <option value="GBP">GBP (British Pound)</option>
                        <option value="EUR">EUR (Euro)</option>
                        <option value="USD">USD (Dollar)</option>
                    </select>
                    <span asp-validation-for="Currency" class="text-red-500 text-sm mt-2 block"></span>
                </div>

                <!-- Wallet Type Selection -->
                <div>
                    <label asp-for="WalletType" class="block text-sm font-medium text-gray-700 mb-1">Wallet Type</label>
                    <select asp-for="WalletType" class="w-full p-3 border rounded-lg focus:ring-indigo-500 focus:border-indigo-500 @((ViewData.ModelState["WalletType"]?.Errors.Count > 0 ? "border-red-500" : "border-gray-300"))">
                        <option value="">Select Wallet Type</option>
                        @foreach (var type in Enum.GetValues(typeof(WalletType)))
                        {
                            <option value="@type">@type</option>
                        }
                    </select>
                    <span asp-validation-for="WalletType" class="text-red-500 text-sm mt-2 block"></span>
                </div>

                <!-- Submit Button -->
                <div class="text-center">
                    <button type="submit" class="bg-indigo-600 hover:bg-indigo-700 text-white font-bold py-3 px-6 rounded-lg shadow-lg transition duration-150">Create Wallet</button>
                </div>
            </form>
        </div>
    </div>

    <script>
        // Reset the border color when clicking or typing in the input fields
        document.querySelectorAll('input, select').forEach(function (input) {
            input.addEventListener('input', function () {
                this.classList.remove('border-red-500');
                this.classList.add('border-gray-300');
            });

            input.addEventListener('change', function () {
                this.classList.remove('border-red-500');
                this.classList.add('border-gray-300');
            });
        });
    </script>
</body>

</html>
